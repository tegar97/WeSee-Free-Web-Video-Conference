[{"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\index.tsx":"1","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\App.tsx":"3","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Dasboard\\Dasboard.tsx":"4","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Login\\Login.tsx":"5","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Landing-Page\\LandingPage.tsx":"6","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Register\\Register.tsx":"7","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Room\\Room.tsx":"8","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\context\\AuthContext.tsx":"9","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\firebase.tsx":"10","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Room\\Room.styles.ts":"11","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-video\\RoomVideo.tsx":"12","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-video\\RoomVideo.styles.tsx":"13","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\videoGrid\\VideoGrid.tsx":"14","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\videoGrid\\videoGrid.tsx":"15","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-navbar\\Room-navbar.tsx":"16","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-navbar\\Room-navbar.styles.ts":"17","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\context\\Audio.tsx":"18","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\constant\\socket.ts":"19","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chatbar\\ChatBar.tsx":"20","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chatbar\\ChatBar.styles.tsx":"21","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\RoomMenu\\RoomMenu.tsx":"22","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chat-box\\chat-box.tsx":"23","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chat-box\\chat-box.styles.ts":"24","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\context\\chatMessage.tsx":"25","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\settings\\settings.tsx":"26","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\settings\\settings.styles.ts":"27","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\preparePages\\prepare.tsx":"28","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\settings\\sidebar\\Setting-sidebar.tsx":"29","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-setting\\Audio-setting.tsx":"30","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-setting\\Audio-setting.styles.tsx":"31","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\test\\Test.tsx":"32","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-level\\Audio-level.tsx":"33","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-level\\soundmeters.ts":"34","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\users\\UsersList.tsx":"35","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\users\\userList.styles.styles.tsx":"36","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\videoGrid\\videoGrid.styles.tsx":"37","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Landing-Page\\LandingPage.styles.tsx":"38","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Hero\\Hero.tsx":"39","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Hero\\Hero.styles.tsx":"40","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Section-Features\\SectionFeatures.tsx":"41","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Section-Features\\SectionFeatures.styles.ts":"42"},{"size":512,"mtime":1612255925911,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1607683616451,"results":"45","hashOfConfig":"44"},{"size":1406,"mtime":1612626800407,"results":"46","hashOfConfig":"44"},{"size":1776,"mtime":1612630639732,"results":"47","hashOfConfig":"44"},{"size":1514,"mtime":1612184639364,"results":"48","hashOfConfig":"44"},{"size":832,"mtime":1612974296499,"results":"49","hashOfConfig":"44"},{"size":3092,"mtime":1612246677175,"results":"50","hashOfConfig":"44"},{"size":8918,"mtime":1612856295102,"results":"51","hashOfConfig":"44"},{"size":1675,"mtime":1612706933956,"results":"52","hashOfConfig":"44"},{"size":624,"mtime":1612268501154,"results":"53","hashOfConfig":"44"},{"size":1071,"mtime":1612369481038,"results":"54","hashOfConfig":"44"},{"size":1528,"mtime":1612787739217,"results":"55","hashOfConfig":"44"},{"size":617,"mtime":1612360778051,"results":"56","hashOfConfig":"44"},{"size":4396,"mtime":1612255897786,"results":"57","hashOfConfig":"44"},{"size":7895,"mtime":1612848722864,"results":"58","hashOfConfig":"44"},{"size":5223,"mtime":1612787710201,"results":"59","hashOfConfig":"44"},{"size":816,"mtime":1612368823455,"results":"60","hashOfConfig":"44"},{"size":460,"mtime":1612335260077,"results":"61","hashOfConfig":"44"},{"size":206,"mtime":1612849044918,"results":"62","hashOfConfig":"44"},{"size":1988,"mtime":1612582973914,"results":"63","hashOfConfig":"44"},{"size":830,"mtime":1612416573586,"results":"64","hashOfConfig":"44"},{"size":1252,"mtime":1612678146905,"results":"65","hashOfConfig":"44"},{"size":1484,"mtime":1612548598085,"results":"66","hashOfConfig":"44"},{"size":310,"mtime":1612535160046,"results":"67","hashOfConfig":"44"},{"size":549,"mtime":1612527257383,"results":"68","hashOfConfig":"44"},{"size":2477,"mtime":1612680804250,"results":"69","hashOfConfig":"44"},{"size":558,"mtime":1612595640029,"results":"70","hashOfConfig":"44"},{"size":6692,"mtime":1612604939053,"results":"71","hashOfConfig":"44"},{"size":1105,"mtime":1612686074128,"results":"72","hashOfConfig":"44"},{"size":6865,"mtime":1612673865762,"results":"73","hashOfConfig":"44"},{"size":499,"mtime":1612600661696,"results":"74","hashOfConfig":"44"},{"size":7921,"mtime":1612628820110,"results":"75","hashOfConfig":"44"},{"size":4445,"mtime":1612690784112,"results":"76","hashOfConfig":"44"},{"size":1869,"mtime":1612790210247,"results":"77","hashOfConfig":"44"},{"size":528,"mtime":1612681184010,"results":"78","hashOfConfig":"44"},{"size":480,"mtime":1612681105015,"results":"79","hashOfConfig":"44"},{"size":586,"mtime":1612788285852,"results":"80","hashOfConfig":"44"},{"size":715,"mtime":1612974561389,"results":"81","hashOfConfig":"44"},{"size":2247,"mtime":1612971707651,"results":"82","hashOfConfig":"44"},{"size":1495,"mtime":1612974658654,"results":"83","hashOfConfig":"44"},{"size":3285,"mtime":1613034986487,"results":"84","hashOfConfig":"44"},{"size":2154,"mtime":1613034486286,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"137ehr3",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\index.tsx",[],["181","182"],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\App.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Dasboard\\Dasboard.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Landing-Page\\LandingPage.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Register\\Register.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Room\\Room.tsx",["183","184","185","186","187","188","189","190","191","192","193"],"// @ts-nocheck\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport RoomNavbar from '../../components/Room-navbar/Room-navbar';\r\nimport RoomVideo from '../../components/Room-video/RoomVideo';\r\nimport { RoomContainer, RoomChatAndUsers, RoomChatAndUsersItems, ItemExtends } from './Room.styles';\r\nimport Peer from 'simple-peer';\r\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\r\nimport { AudioProvider } from './../../context/Audio';\r\nimport { ENDPOINT, socket } from '../../components/constant/socket';\r\nimport ChatBar from '../../components/chatbar/ChatBar';\r\nimport Draggable from 'react-draggable';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport queryString from 'query-string';\r\nimport { useMessage } from '../../context/chatMessage';\r\nimport { Howl } from 'howler';\r\nimport ringtone from './../../sounds/enterRoom.mp3';\r\nimport hark from 'hark';\r\nconst ringtoneSound = new Howl({\r\n    src: [ringtone],\r\n    loop: false,\r\n});\r\n\r\nconst Room: React.FC = ({ match, location }: any) => {\r\n    const { messages, setMessages } = useMessage();\r\n    const { users, pin } = useAuth();\r\n\r\n    const [stream, setStream] = useState({});\r\n    const userVideo = useRef(null);\r\n    const peersRef = useRef([]);\r\n    const [peers, setPeers] = useState([]);\r\n    const [peers2, setPeers2] = useState([]);\r\n    const handleShareScreen = useFullScreenHandle();\r\n    const handle = useFullScreenHandle();\r\n    const [roomMenu, setRoomMenu] = useState(false);\r\n    const [isScreenShare, setIsScreenShare] = useState(false);\r\n    const screenShareRef = useRef(null);\r\n    const [menuUser, setUserMenu] = useState(false);\r\n\r\n    let [systemMessage, setSystemMessage] = useState({});\r\n    const { currentUser } = useAuth();\r\n    const name = currentUser.displayName;\r\n    const room = match.params.id;\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n            setStream(stream);\r\n\r\n            screenShareRef.current = stream;\r\n            userVideo.current.srcObject = stream;\r\n\r\n            socket.emit('join', { name, room }, (error) => {\r\n                ringtoneSound.play();\r\n\r\n                if (error) {\r\n                    alert(error);\r\n                }\r\n            });\r\n            socket.on('all users', (users) => {\r\n                const peers = [];\r\n\r\n                users.forEach((userID) => {\r\n                    console.log('users', userID.id);\r\n                    const peer = createPeer(userID, socket.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    });\r\n                    peers.push(peer);\r\n                });\r\n                setPeers(peers);\r\n            });\r\n            socket.on('user joined', (payload) => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                });\r\n\r\n                setPeers((users) => [...users, peer]);\r\n            });\r\n\r\n            socket.on('receiving returned signal', (payload) => {\r\n                const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n\r\n            // socket.on('user left', (id) => {\r\n            //     const peerObj = peersRef.current.find((p) => p.peerID === id);\r\n            //     console.log(peerObj);\r\n            //     if (peerObj) {\r\n            //         peerObj.peer.destroy();\r\n            //     }\r\n\r\n            //     const peers = peersRef.current.filter((p) => p.peerID !== id)\r\n            //     console.log('afasf', peers);\r\n            //     peersRef.current = peers;\r\n            //     setPeers(peers);\r\n            //     console.log(peers)\r\n            // });\r\n        });\r\n    }, [ENDPOINT]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages((messages) => [...messages, message]);\r\n            if (message.user === 'system') {\r\n                toast.info(message.text);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    function createPeer(userToSignal: any, callerID: any, stream: any) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n            // config: {\r\n            //     iceServers: [\r\n            //         {\r\n            //             urls: 'stun:numb.viagenie.ca',\r\n            //             username: 'sultan1640@gmail.com',\r\n            //             credential: '98376683',\r\n            //         },\r\n            //         {\r\n            //             urls: 'turn:numb.viagenie.ca',\r\n            //             username: 'sultan1640@gmail.com',\r\n            //             credential: '98376683',\r\n            //         },\r\n            //     ],\r\n            // },\r\n        });\r\n\r\n        peer.on('signal', (signal) => {\r\n            socket.emit('sending signal', { userToSignal, callerID, signal });\r\n        });\r\n\r\n        return peer;\r\n    }\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n            // config: {\r\n            //     iceServers: [\r\n            //         {\r\n            //             urls: 'stun:numb.viagenie.ca',\r\n            //             username: 'sultan1640@gmail.com',\r\n            //             credential: '98376683',\r\n            //         },\r\n            //         {\r\n            //             urls: 'turn:numb.viagenie.ca',\r\n            //             username: 'sultan1640@gmail.com',\r\n            //             credential: '98376683',\r\n            //         },\r\n            //     ],\r\n            // },\r\n        });\r\n\r\n        peer.on('signal', (signal) => {\r\n            socket.emit('returning signal', { signal, callerID });\r\n        });\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <FullScreen handle={handle}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable={false}\r\n                pauseOnHover\r\n            />\r\n\r\n            <RoomContainer id=\"roomContainer\">\r\n                <RoomChatAndUsers>\r\n                    <RoomChatAndUsersItems onClick={() => setUserMenu(!menuUser)}>\r\n                        <i className=\"text-2xl text-white fas fa-users\"></i>\r\n                        <ItemExtends>\r\n                            <span style={{ fontSize: '.7rem' }}>{users.length}</span>\r\n                        </ItemExtends>\r\n                    </RoomChatAndUsersItems>\r\n                    <RoomChatAndUsersItems\r\n                        onClick={() => setRoomMenu(!roomMenu)}\r\n                        style={{ borderLeft: '1px solid rgba(255,255,255,.2)' }}\r\n                    >\r\n                        <i className=\"text-2xl text-white fas fa-comment-dots\"></i>\r\n                        <ItemExtends>\r\n                            <span style={{ fontSize: '.7rem' }}>\r\n                                {messages.filter((m) => m.user !== 'system').length}\r\n                            </span>\r\n                        </ItemExtends>\r\n                    </RoomChatAndUsersItems>\r\n                </RoomChatAndUsers>\r\n\r\n                <AudioProvider>\r\n                    <RoomVideo\r\n                        userVideo={userVideo}\r\n                        peers={peers}\r\n                        stream={stream}\r\n                        roomMenu={roomMenu}\r\n                        setRoomMenu={setRoomMenu}\r\n                        setUserMenu={setUserMenu}\r\n                        menuUser={menuUser}\r\n                        isScreenShare={isScreenShare}\r\n                        screenShareRef={screenShareRef}\r\n                        usersData={users}\r\n                        handleShareScreen={handleShareScreen}\r\n                    />\r\n                    <RoomNavbar\r\n                        isScreenShare={isScreenShare}\r\n                        setIsScreenShare={setIsScreenShare}\r\n                        stream={stream}\r\n                        peers={peersRef}\r\n                        userVideo={userVideo}\r\n                        handle={handle}\r\n                        screenShareRef={screenShareRef}\r\n                        handleShareScreen={handleShareScreen}\r\n                    />\r\n                </AudioProvider>\r\n            </RoomContainer>\r\n        </FullScreen>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\context\\AuthContext.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\firebase.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Room\\Room.styles.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-video\\RoomVideo.tsx",["194"],"// @ts-nocheck\r\nimport { useEffect } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport ChatBar from '../chatbar/ChatBar';\r\nimport { socket } from '../constant/socket';\r\nimport RoomMenu from '../RoomMenu/RoomMenu';\r\nimport Users from '../users/UsersList';\r\nimport VideoGrid from '../videoGrid/videoGrid';\r\nimport { RoomVideoContainer } from './RoomVideo.styles';\r\nconst RoomVideo = ({ userVideo, peers, stream, roomMenu, setRoomMenu, menuUser, setUserMenu, handleShareScreen }) => {\r\n    const { users, setUsers } = useAuth();\r\n    useEffect(() => {\r\n        socket.on('roomData', ({ users }) => {\r\n            setUsers(users);\r\n        });\r\n    }, []);\r\n\r\n    console.log('users', users);\r\n    console.log('peerss', peers);\r\n    return (\r\n        <RoomVideoContainer>\r\n            {roomMenu ? (\r\n                <RoomMenu setRoomMenu={setRoomMenu} icon=\"fa fa-times\" title=\"Chat\">\r\n                    <ChatBar />\r\n                </RoomMenu>\r\n            ) : (\r\n                ''\r\n            )}\r\n            {menuUser ? (\r\n                <RoomMenu setRoomMenu={setUserMenu} icon=\"fa fa-times\" title=\"Users\">\r\n                    {users.map((user) => (\r\n                        <Users user={user} />\r\n                    ))}\r\n                </RoomMenu>\r\n            ) : (\r\n                ''\r\n            )}\r\n\r\n            <VideoGrid users={users} userVideo={userVideo} peers={peers} handleShareScreen={handleShareScreen} />\r\n        </RoomVideoContainer>\r\n    );\r\n};\r\n\r\nexport default RoomVideo;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-video\\RoomVideo.styles.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\videoGrid\\VideoGrid.tsx",["195"],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\videoGrid\\videoGrid.tsx",["196","197","198","199","200","201","202","203","204","205","206"],"// @ts-nochecsk\r\n\r\n//@ts-nocheck\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport debounce from 'lodash/debounce';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport hark from 'hark';\r\nimport { FullScreenContainer, VideoContainer, VideoMenu } from './videoGrid.styles';\r\nimport { FullScreen } from 'react-full-screen';\r\nconst Video = (props) => {\r\n    const ref = useRef(null);\r\n    console.log('peersasfasfasfsf', props);\r\n\r\n    useEffect(() => {\r\n        console.log(props.peer);\r\n        props.peer.on('stream', (stream) => {\r\n            ref.current.srcObject = stream;\r\n            console.log('stream', stream);\r\n            var options = {};\r\n\r\n            const speechEvents = hark(stream, options);\r\n            speechEvents.on('speaking', function () {\r\n                console.log('speaking');\r\n                ref.current.style.border = '8px solid #19ff57';\r\n            });\r\n            speechEvents.on('stopped_speaking', function () {\r\n                console.log('stopped_speaking');\r\n                ref.current.style.border = '';\r\n            });\r\n\r\n            console.log(stream.getAudioTracks()[0].enabled);\r\n        });\r\n    }, [props.peer]);\r\n\r\n    return (\r\n        <>\r\n            <video\r\n                onClick={() => props.pinVideo()}\r\n                style={{ width: '100%', objectFit: 'cover' }}\r\n                playsInline\r\n                autoPlay\r\n                ref={ref}\r\n                id=\"video\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst SelfVideo = () => {\r\n    return <h1>tes</h1>;\r\n};\r\nconst VideoGrid = ({ userVideo, peers, users, handleShareScreen }) => {\r\n    const {}: any = useAuth();\r\n    const [pin, setPin] = useState(false);\r\n    const videoUsersPin = useRef();\r\n    console.log(pin);\r\n    console.log(peers);\r\n    useEffect(() => {\r\n        function recalculateLayout() {\r\n            const gallery = document.getElementById('gallery');\r\n            const aspectRatio = 16 / 9;\r\n            const screenWidth = document.body.getBoundingClientRect().width;\r\n            const screenHeight = document.body.getBoundingClientRect().height;\r\n            const videoCount = pin ? 1 : document.getElementsByTagName('video').length;\r\n\r\n            function calculateLayout(\r\n                containerWidth: number,\r\n                containerHeight: number,\r\n                videoCount: number,\r\n                aspectRatio: number,\r\n            ): { width: number; height: number; cols: number } {\r\n                let bestLayout = {\r\n                    area: 0,\r\n                    cols: 0,\r\n                    rows: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                };\r\n\r\n \r\n                for (let cols = 1; cols <= videoCount; cols++) {\r\n                    const rows = Math.ceil(videoCount / cols);\r\n                    const hScale = containerWidth / (cols * aspectRatio);\r\n                    const vScale = containerHeight / rows;\r\n                    let width;\r\n                    let height;\r\n                    if (hScale <= vScale) {\r\n                        width = Math.floor(containerWidth / cols);\r\n                        height = Math.floor(width / aspectRatio);\r\n                    } else {\r\n                        height = Math.floor(containerHeight / rows);\r\n                        width = Math.floor(height * aspectRatio);\r\n                    }\r\n                    const area = width * height;\r\n                    if (area > bestLayout.area) {\r\n                        bestLayout = {\r\n                            area,\r\n                            width,\r\n                            height,\r\n                            rows,\r\n                            cols,\r\n                        };\r\n                    }\r\n                }\r\n                return bestLayout;\r\n            }\r\n\r\n            const { width, height, cols } = calculateLayout(screenWidth, screenHeight, videoCount, aspectRatio);\r\n\r\n            gallery.style.setProperty('--width', width + 'px');\r\n            gallery.style.setProperty('--height', height + 'px');\r\n            gallery.style.setProperty('--cols', cols + '');\r\n        }\r\n\r\n        const debouncedRecalculateLayout = debounce(recalculateLayout, 50);\r\n        window.addEventListener('resize', debouncedRecalculateLayout);\r\n        debouncedRecalculateLayout();\r\n    }, [pin, peers]);\r\n\r\n    useEffect(() => {\r\n        const video = document.getElementById('video');\r\n        const getVideoPin = document.getElementById('pin');\r\n        const userVideo = document.getElementById('userVideo');\r\n        const videoGroup = document.getElementById('videoGroup');\r\n        const gallery = document.getElementById('gallery');\r\n        const roomContainer = document.getElementById('roomContainer');\r\n        const videoMenu = document.getElementById('videoMenu');\r\n\r\n        const videoUnpin = [];\r\n\r\n        if (pin) {\r\n            userVideo.style.display = 'none';\r\n            gallery.style.alignItems = 'flex-start';\r\n            gallery.style.justifyContent = 'center';\r\n\r\n            if (videoGroup) {\r\n                videoGroup.style.display = 'none';\r\n            }\r\n        } else {\r\n            if (videoGroup) {\r\n                videoGroup.style.display = 'block';\r\n            }\r\n            userVideo.style.display = 'block';\r\n        }\r\n    }, [pin, peers]);\r\n\r\n    const pinVideo = () => {\r\n        videoUsersPin.current.id = 'pin';\r\n        setPin(true);\r\n    };\r\n    const unpin = () => {\r\n        videoUsersPin.current.id = 'videoGroup';\r\n        setPin(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"gallery\">\r\n                <div className=\"video-container\" id=\"userVideo\">\r\n                    <video\r\n                        style={{ width: '100%', objectFit: 'cover' }}\r\n                        muted\r\n                        ref={userVideo}\r\n                        autoPlay\r\n                        playsInline\r\n                    ></video>\r\n\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            background: 'rgba(0,0,0,.8)',\r\n                            bottom: '0',\r\n                            left: '2px',\r\n                            color: '#fff',\r\n                        }}\r\n                    ></div>\r\n                </div>\r\n\r\n                {peers.map((peer, index) => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"video-container\" ref={videoUsersPin} id=\"videoGroup\">\r\n                                {peer ? (\r\n                                    <Video pinVideo={pinVideo} setPin={setPin} key={index} peer={peer} />\r\n                                ) : (\r\n                                    'Loading ...'\r\n                                )}\r\n                                <div\r\n                                    style={{\r\n                                        position: 'absolute',\r\n                                        background: 'rgba(0,0,0,.8)',\r\n                                        top: '50%',\r\n                                        left: '50%',\r\n                                        right: 'auto',\r\n                                        bottom: 'auto',\r\n                                        color: '#fff',\r\n                                        textAlign: 'center',\r\n                                        display: 'none',\r\n                                    }}\r\n                                    id=\"videoMenu\"\r\n                                    onClick={() => unpin()}\r\n                                >\r\n                                    unpin\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VideoGrid;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-navbar\\Room-navbar.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Room-navbar\\Room-navbar.styles.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\context\\Audio.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\constant\\socket.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chatbar\\ChatBar.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chatbar\\ChatBar.styles.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\RoomMenu\\RoomMenu.tsx",["207"],"// @ts-nocheck\r\n\r\nimport Draggable from 'react-draggable';\r\nimport styled from 'styled-components';\r\nimport ResizePanel from 'react-resize-panel';\r\n\r\nconst RoomMenuContainer = styled.div`\r\n    width: 30rem;\r\n    height: 30rem;\r\n    background-color: #1c1f2e;\r\n    position: absolute;\r\n    z-index: 100;\r\n`;\r\n\r\nconst RoomMenuNavbar = styled.div`\r\n    padding: 0.9rem 1.1rem;\r\n    background-color: rgb(33, 36, 50, 0.75);\r\n    color: #bababa;\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\nconst RoomMenu = ({ children, setRoomMenu, icon, title }) => {\r\n    return (\r\n        <Draggable bounds=\"parent\">\r\n            <RoomMenuContainer>\r\n                <RoomMenuNavbar>\r\n                    <div>\r\n                        <i class=\"far fa-comment-alt text-xl\"></i>\r\n                        <span className=\"ml-3 text-xl\">{title}</span>\r\n                    </div>\r\n                    <button>\r\n                        <i onClick={() => setRoomMenu(false)} className={`${icon} text-2xl`}></i>\r\n                    </button>\r\n                </RoomMenuNavbar>\r\n                {children}\r\n            </RoomMenuContainer>\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nexport default RoomMenu;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chat-box\\chat-box.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\chat-box\\chat-box.styles.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\context\\chatMessage.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\settings\\settings.tsx",["208","209","210","211","212","213"],"// @ts-nocheck\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport Modal from 'react-modal';\r\nimport { SettingNav } from './settings.styles';\r\nimport SettingSideBar from './sidebar/Setting-sidebar';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport Prepare from '../../pages/preparePages/prepare';\r\nimport AudioSetting from '../Audio-setting/Audio-setting';\r\n\r\nconst SettingApp = ({ stream, peers, children, userVideo }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {}, []);\r\n    return (\r\n        <>\r\n            <button onClick={() => setIsOpen(true)}>{children}</button>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                ariaHideApp={false}\r\n                onRequestClose={() => setIsOpen(false)}\r\n                style={{\r\n                    overlay: { backgroundColor: 'rgba(25,27,40,.9)' },\r\n                    content: {\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        right: 'auto',\r\n                        bottom: 'auto',\r\n                        marginRight: '-50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        width: '60%',\r\n                        height: '65%',\r\n                        backgroundColor: '#1c1f2e',\r\n                        outline: 'none',\r\n                        border: 'none',\r\n                        padding: '.2rem 0',\r\n                    },\r\n                }}\r\n            >\r\n                <div style={{ height: '100%' }}>\r\n                    <SettingNav>\r\n                        <div>\r\n                            <i className=\"text-xl fas fa-cog\"></i>\r\n                            <span className=\"ml-3 text-xl\">Settings</span>\r\n                        </div>\r\n                        <button>\r\n                            <i onClick={() => setIsOpen(false)} className=\"text-2xl fa fa-times\"></i>\r\n                        </button>\r\n                    </SettingNav>\r\n                    <div style={{ display: 'flex', height: '100%', width: '100%' }}>\r\n                        <SettingSideBar />\r\n                        <div style={{ width: '100%' }}>\r\n                            <AudioSetting stream={stream} peers={peers} userVideo={userVideo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SettingApp;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\settings\\settings.styles.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\preparePages\\prepare.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\settings\\sidebar\\Setting-sidebar.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-setting\\Audio-setting.tsx",["214"],"// @ts-nocheck\r\n\r\nimport React, { useEffect } from 'react';\r\nimport Audiolevel from '../Audio-level/Audio-level';\r\nimport { AudioSettingContainer, AudiSettingText, Select } from './Audio-setting.styles';\r\nfunction AudioSetting({ stream, peers, userVideo }) {\r\n    useEffect(() => {\r\n        const videoElement = document.querySelector('#video2');\r\n        const audioInputSelect = document.querySelector('select#audioSource');\r\n        const audioOutputSelect = document.querySelector('select#audioOutput');\r\n        const videoSelect = document.querySelector('select#videoSource');\r\n        const selectors = [audioInputSelect, audioOutputSelect, videoSelect];\r\n\r\n        audioOutputSelect.disabled = !('sinkId' in HTMLMediaElement.prototype);\r\n\r\n        function gotDevices(deviceInfos) {\r\n            // Handles being called several times to update labels. Preserve values.\r\n            const values = selectors.map((select) => select.value);\r\n            selectors.forEach((select) => {\r\n                while (select.firstChild) {\r\n                    select.removeChild(select.firstChild);\r\n                }\r\n            });\r\n            for (let i = 0; i !== deviceInfos.length; ++i) {\r\n                const deviceInfo = deviceInfos[i];\r\n                const option = document.createElement('option');\r\n                option.value = deviceInfo.deviceId;\r\n                if (deviceInfo.kind === 'audioinput') {\r\n                    option.text = deviceInfo.label || `microphone ${audioInputSelect.length + 1}`;\r\n                    audioInputSelect.appendChild(option);\r\n                } else if (deviceInfo.kind === 'audiooutput') {\r\n                    option.text = deviceInfo.label || `speaker ${audioOutputSelect.length + 1}`;\r\n                    audioOutputSelect.appendChild(option);\r\n                } else if (deviceInfo.kind === 'videoinput') {\r\n                    option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\r\n                    videoSelect.appendChild(option);\r\n                } else {\r\n                    console.log('Some other kind of source/device: ', deviceInfo);\r\n                }\r\n            }\r\n            selectors.forEach((select, selectorIndex) => {\r\n                if (Array.prototype.slice.call(select.childNodes).some((n) => n.value === values[selectorIndex])) {\r\n                    select.value = values[selectorIndex];\r\n                }\r\n            });\r\n        }\r\n\r\n        navigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\r\n\r\n        // Attach audio output device to video element using device/sink ID.\r\n        function attachSinkId(element, sinkId) {\r\n            if (typeof element.sinkId !== 'undefined') {\r\n                element\r\n                    .setSinkId(sinkId)\r\n                    .then(() => {\r\n                        console.log(`Success, audio output device attached: ${sinkId}`);\r\n                    })\r\n                    .catch((error) => {\r\n                        let errorMessage = error;\r\n                        if (error.name === 'SecurityError') {\r\n                            errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\r\n                        }\r\n                        console.error(errorMessage);\r\n                        // Jump back to first output device in the list as it's the default.\r\n                        audioOutputSelect.selectedIndex = 0;\r\n                    });\r\n            } else {\r\n                console.warn('Browser does not support output device selection.');\r\n            }\r\n        }\r\n\r\n        function changeAudioDestination() {\r\n            const audioDestination = audioOutputSelect.value;\r\n            attachSinkId(videoElement, audioDestination);\r\n        }\r\n\r\n        function gotStream(screenStream) {\r\n            window.stream = screenStream; // make stream available to console\r\n            userVideo.current.srcObject = screenStream;\r\n            peers.current[0].peer.replaceTrack(stream.getVideoTracks()[0], screenStream.getVideoTracks()[0], stream);\r\n            videoElement.srcObject = screenStream;\r\n\r\n            return navigator.mediaDevices.enumerateDevices();\r\n        }\r\n\r\n        function handleError(error) {\r\n            console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\r\n        }\r\n\r\n        function start() {\r\n            if (window.stream) {\r\n                window.stream.getTracks().forEach((track) => {\r\n                    track.stop();\r\n                });\r\n            }\r\n            const audioSource = audioInputSelect.value;\r\n            const videoSource = videoSelect.value;\r\n            const constraints = {\r\n                audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\r\n                video: { deviceId: videoSource ? { exact: videoSource } : undefined },\r\n            };\r\n            navigator.mediaDevices.getUserMedia(constraints).then(gotStream).then(gotDevices).catch(handleError);\r\n        }\r\n\r\n        audioInputSelect.onchange = start;\r\n        audioOutputSelect.onchange = changeAudioDestination;\r\n\r\n        videoSelect.onchange = start;\r\n\r\n        start();\r\n    }, [stream]);\r\n    return (\r\n        <AudioSettingContainer>\r\n            <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\r\n                <div>\r\n                    <AudiSettingText className=\"text-white text-1xl text-bold\">Camera</AudiSettingText>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignContent: 'center',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'space-between',\r\n                        }}\r\n                    >\r\n                        <Select id=\"videoSource\" style={{ width: '80%' }}></Select>\r\n                        <video id=\"video2\" playsInline autoPlay style={{ width: '100px', marginTop: '1rem' }} />\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: '2rem' }}>\r\n                    <AudiSettingText className=\"text-white text-1xl text-bold\">Mikrofon</AudiSettingText>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Select id=\"audioSource\"></Select>\r\n                    </div>\r\n                    <Audiolevel stream={stream} />\r\n                </div>\r\n                <div style={{ marginTop: '2rem' }}>\r\n                    <AudiSettingText className=\"text-white text-1xl text-bold\">Speaker</AudiSettingText>\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Select id=\"audioOutput\"></Select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AudioSettingContainer>\r\n    );\r\n}\r\n\r\nexport default AudioSetting;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-setting\\Audio-setting.styles.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\test\\Test.tsx",["215","216"],"// @ts-nocheck\r\n\r\nimport { useEffect } from 'react';\r\nimport * as bodyPix from '@tensorflow-models/body-pix';\r\n\r\nfunction Test() {\r\n    useEffect(() => {\r\n        const videoElement = document.getElementById('video');\r\n        const canvas = document.getElementById('canvas');\r\n\r\n        const startBtn = document.getElementById('start-btn');\r\n        const stopBtn = document.getElementById('stop-btn');\r\n        const blurBtn = document.getElementById('blur-btn');\r\n        const unblurBtn = document.getElementById('unblur-btn');\r\n\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        startBtn.addEventListener('click', (e) => {\r\n            startBtn.disabled = true;\r\n            stopBtn.disabled = false;\r\n\r\n            unblurBtn.disabled = false;\r\n            blurBtn.disabled = false;\r\n\r\n            startVideoStream();\r\n        });\r\n\r\n        stopBtn.addEventListener('click', (e) => {\r\n            startBtn.disabled = false;\r\n            stopBtn.disabled = true;\r\n\r\n            unblurBtn.disabled = true;\r\n            blurBtn.disabled = true;\r\n\r\n            unblurBtn.hidden = true;\r\n            blurBtn.hidden = false;\r\n\r\n            videoElement.hidden = false;\r\n            canvas.hidden = true;\r\n\r\n            stopVideoStream();\r\n        });\r\n\r\n        blurBtn.addEventListener('click', (e) => {\r\n            blurBtn.hidden = true;\r\n            unblurBtn.hidden = false;\r\n\r\n            videoElement.hidden = true;\r\n            canvas.hidden = false;\r\n\r\n            loadBodyPix();\r\n        });\r\n\r\n        unblurBtn.addEventListener('click', (e) => {\r\n            blurBtn.hidden = false;\r\n            unblurBtn.hidden = true;\r\n\r\n            videoElement.hidden = false;\r\n            canvas.hidden = true;\r\n        });\r\n\r\n        videoElement.onplaying = () => {\r\n            canvas.height = videoElement.videoHeight;\r\n            canvas.width = videoElement.videoWidth;\r\n        };\r\n\r\n        function startVideoStream() {\r\n            navigator.mediaDevices\r\n                .getUserMedia({ video: true, audio: false })\r\n                .then((stream) => {\r\n                    videoElement.srcObject = stream;\r\n                    videoElement.play();\r\n                })\r\n                .catch((err) => {\r\n                    startBtn.disabled = false;\r\n                    blurBtn.disabled = true;\r\n                    stopBtn.disabled = true;\r\n                    alert(`Following error occured: ${err}`);\r\n                });\r\n        }\r\n\r\n        function stopVideoStream() {\r\n            const stream = videoElement.srcObject;\r\n\r\n            stream.getTracks().forEach((track) => track.stop());\r\n            videoElement.srcObject = null;\r\n        }\r\n\r\n        function loadBodyPix() {\r\n            let options = {\r\n                multiplier: 0.75,\r\n                stride: 32,\r\n                quantBytes: 4,\r\n            };\r\n            window.bodyPix\r\n                .load(options)\r\n                .then((net) => perform(net))\r\n                .catch((err) => console.log(err));\r\n        }\r\n\r\n        async function perform(net) {\r\n            while (startBtn.disabled && blurBtn.hidden) {\r\n                const segmentation = await net.segmentPerson(video212);\r\n\r\n                const backgroundBlurAmount = 6;\r\n                const edgeBlurAmount = 2;\r\n                const flipHorizontal = true;\r\n\r\n                window.bodyPix.drawBokehEffect(\r\n                    canvas,\r\n                    videoElement,\r\n                    segmentation,\r\n                    backgroundBlurAmount,\r\n                    edgeBlurAmount,\r\n                    flipHorizontal,\r\n                );\r\n            }\r\n        }\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <main role=\"main\">\r\n                <section className=\"text-center jumbotron\">\r\n                    <div className=\"container\">\r\n                        <h1>Live!</h1>\r\n                    </div>\r\n                </section>\r\n                <div className=\"py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-md-center\">\r\n                            <div className=\"col-6\">\r\n                                <center>\r\n                                    <div className=\"mb-4 shadow-sm card\">\r\n                                        <center>\r\n                                            <video id=\"video\" width=\"480\" height=\"320\" autoPlay playsInline></video>\r\n                                        </center>\r\n                                        <center>\r\n                                            <canvas hidden id=\"canvas\"></canvas>\r\n                                        </center>\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Video Stream</h5>\r\n                                            <p className=\"card-text\">\r\n                                                Start and Stop to play the live video stream. Toggle between blur and\r\n                                                unblur to blur the background in the stream\r\n                                            </p>\r\n                                            <div className=\"justify-content-between align-items-center\">\r\n                                                <div className=\"btn-group btn-group-sm\">\r\n                                                    <button\r\n                                                        id=\"start-btn\"\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-sm btn-outline-success\"\r\n                                                    >\r\n                                                        Start\r\n                                                    </button>\r\n                                                    <button\r\n                                                        id=\"blur-btn\"\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-sm btn-outline-secondary\"\r\n                                                        disabled\r\n                                                    >\r\n                                                        Blur\r\n                                                    </button>\r\n                                                    <button\r\n                                                        id=\"unblur-btn\"\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-sm btn-outline-secondary\"\r\n                                                        hidden\r\n                                                    >\r\n                                                        Unblur\r\n                                                    </button>\r\n                                                    <button\r\n                                                        id=\"stop-btn\"\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-sm btn-outline-danger\"\r\n                                                        disabled\r\n                                                    >\r\n                                                        Stop\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-level\\Audio-level.tsx",["217","218"],"//@ts-nocheck\r\nimport React, { useEffect } from 'react';\r\nimport { AudiSettingText } from '../Audio-setting/Audio-setting.styles';\r\nimport { SoundMeter } from './soundmeters';\r\n\r\nfunction Audiolevel({ stream }) {\r\n    useEffect(() => {\r\n        const startButton = document.getElementById('startButton');\r\n        const stopBotton = document.getElementById('stopButton');\r\n        const audiotest = document.getElementById('audiotest');\r\n        stopBotton.style.display = 'none';\r\n\r\n        startButton.onclick = start;\r\n        stopBotton.onclick = stop;\r\n\r\n        const instantMeter = document.querySelector('#instant meter');\r\n\r\n        const instantValueDisplay = document.querySelector('#instant .value');\r\n\r\n        // Put variables in global scope to make them available to the browser console.\r\n        const constraints = (window.constraints = {\r\n            audio: true,\r\n            video: false,\r\n        });\r\n\r\n        let meterRefresh = null;\r\n\r\n        function handleSuccess(stream) {\r\n            // Put variables in global scope to make them available to the\r\n            // browser console.\r\n            console.log('0', stream);\r\n            console.log('1', window.audioContext);\r\n            window.stream = stream;\r\n\r\n            audiotest.srcObject = stream;\r\n            console.log('trigger');\r\n            const soundMeter = (window.soundMeter = new SoundMeter(window.audioContext));\r\n            soundMeter.connectToSource(stream, function (e) {\r\n                if (e) {\r\n                    alert(e);\r\n                    return;\r\n                }\r\n                meterRefresh = setInterval(() => {\r\n                    instantMeter.value = instantValueDisplay.innerText = soundMeter.instant.toFixed(2);\r\n                }, 200);\r\n            });\r\n        }\r\n\r\n        function handleError(error) {\r\n            console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\r\n        }\r\n\r\n        function start() {\r\n            console.log('Requesting local stream');\r\n            startButton.style.display = 'none';\r\n            stopBotton.style.display = 'inline-block';\r\n\r\n            try {\r\n                window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n                window.audioContext = new AudioContext();\r\n            } catch (e) {\r\n                alert('Web Audio API not supported.');\r\n            }\r\n            handleSuccess(stream);\r\n        }\r\n\r\n        function stop() {\r\n            console.log('Stopping local stream');\r\n            startButton.style.display = 'inline-block';\r\n            stopBotton.style.display = 'none';\r\n\r\n            window.stream.getTracks().forEach((track) => track.stop());\r\n            window.soundMeter.stop();\r\n\r\n            clearInterval(meterRefresh);\r\n            instantMeter.value = instantValueDisplay.innerText = '';\r\n        }\r\n    }, [stream]);\r\n    return (\r\n        <div id=\"meters\" className=\"mt-6\">\r\n            <AudiSettingText>Mic Test</AudiSettingText>\r\n            <div id=\"instant\" className=\"flex flex-row items-center mt-4\">\r\n                <button\r\n                    type=\"button\"\r\n                    id=\"startButton\"\r\n                    className=\"text-lg\"\r\n                    style={{\r\n                        backgroundColor: '#0e78f9',\r\n                        color: '#fff',\r\n                        width: '7rem',\r\n                        height: 'auto',\r\n                        padding: '.5rem .4rem',\r\n                        border: 'none',\r\n                    }}\r\n                >\r\n                    Lest Check\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    id=\"stopButton\"\r\n                    className=\"text-lg\"\r\n                    style={{\r\n                        backgroundColor: '#0e78f9',\r\n                        color: '#fff',\r\n                        width: '7rem',\r\n                        height: 'auto',\r\n                        padding: '.5rem .4rem',\r\n                        border: 'none',\r\n                    }}\r\n                >\r\n                    Stop\r\n                </button>\r\n                <meter className=\"ml-3 \" style={{ width: '100%' }} high=\"0.25\" max=\"1\" value=\"0\"></meter>\r\n                <div className=\"value\"></div>\r\n                <audio playsInline autoPlay id=\"audiotest\" hidden />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Audiolevel;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Audio-level\\soundmeters.ts",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\users\\UsersList.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\users\\userList.styles.styles.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\videoGrid\\videoGrid.styles.tsx",[],["219","220"],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\pages\\Landing-Page\\LandingPage.styles.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Hero\\Hero.tsx",["221","222"],"import React, { useState } from 'react';\r\nimport {\r\n    HeroContainer,\r\n    HeroHeader,\r\n    HeroHeaderMainText,\r\n    HeroHeaderPrimaryText,\r\n    HeroButton,\r\n    HeroImageContainer,\r\n    RoomCodeInput,\r\n    KeyboardInput,\r\n} from './Hero.styles';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nfunction Hero() {\r\n    const [RoomCode, setRoomCode] = useState('');\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\r\n\r\n    return (\r\n        <div>\r\n            <HeroContainer>\r\n                <HeroHeader>\r\n                    <HeroHeaderMainText>STAY CONNECTED TO EVERYONE</HeroHeaderMainText>\r\n                    <HeroHeaderPrimaryText>\r\n                        Wesee is is a video call service that ensures everyone can be connected with just one click\r\n                    </HeroHeaderPrimaryText>\r\n                    <div className=\"flex mt-5\">\r\n                        <HeroButton>Create Room</HeroButton>\r\n                        <div className=\"relative flex items-center \">\r\n                            <RoomCodeInput\r\n                                value={RoomCode}\r\n                                onChange={(e) => setRoomCode(e.target.value)}\r\n                                className=\"ml-5\"\r\n                                placeholder=\"Enter Room Code\"\r\n                            />\r\n                            <KeyboardInput className=\"fas fa-keyboard \"></KeyboardInput>\r\n\r\n                            {RoomCode.length > 3 ? (\r\n                                <p style={{ color: '#0e78f9', marginLeft: '1rem' }}>Join Now</p>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </HeroHeader>\r\n                <HeroImageContainer>\r\n                    {isTabletOrMobile ? (\r\n                        <img src=\"/hero2.png\" alt=\"Hero Image\" style={{ width: '100%', height: '350px' }} />\r\n                    ) : (\r\n                        <img src=\"/hero.png\" alt=\"Hero Image\" style={{ width: '100%', height: '900px' }} />\r\n                    )}\r\n                </HeroImageContainer>\r\n            </HeroContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hero;\r\n","C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Hero\\Hero.styles.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Section-Features\\SectionFeatures.tsx",[],"C:\\Users\\asus\\Documents\\belajar\\Wesee\\client\\src\\components\\Section-Features\\SectionFeatures.styles.ts",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":11,"column":8,"nodeType":"229","messageId":"230","endLine":11,"endColumn":15},{"ruleId":"227","severity":1,"message":"231","line":12,"column":8,"nodeType":"229","messageId":"230","endLine":12,"endColumn":17},{"ruleId":"227","severity":1,"message":"232","line":16,"column":8,"nodeType":"229","messageId":"230","endLine":16,"endColumn":19},{"ruleId":"227","severity":1,"message":"233","line":20,"column":8,"nodeType":"229","messageId":"230","endLine":20,"endColumn":12},{"ruleId":"227","severity":1,"message":"234","line":28,"column":20,"nodeType":"229","messageId":"230","endLine":28,"endColumn":23},{"ruleId":"227","severity":1,"message":"235","line":34,"column":12,"nodeType":"229","messageId":"230","endLine":34,"endColumn":18},{"ruleId":"227","severity":1,"message":"236","line":34,"column":20,"nodeType":"229","messageId":"230","endLine":34,"endColumn":29},{"ruleId":"227","severity":1,"message":"237","line":42,"column":10,"nodeType":"229","messageId":"230","endLine":42,"endColumn":23},{"ruleId":"227","severity":1,"message":"238","line":42,"column":25,"nodeType":"229","messageId":"230","endLine":42,"endColumn":41},{"ruleId":"239","severity":1,"message":"240","line":104,"column":8,"nodeType":"241","endLine":104,"endColumn":18,"suggestions":"242"},{"ruleId":"239","severity":1,"message":"243","line":113,"column":8,"nodeType":"241","endLine":113,"endColumn":10,"suggestions":"244"},{"ruleId":"239","severity":1,"message":"245","line":16,"column":8,"nodeType":"241","endLine":16,"endColumn":10,"suggestions":"246"},{"ruleId":"227","severity":1,"message":"247","line":5,"column":11,"nodeType":"229","messageId":"230","endLine":5,"endColumn":22},{"ruleId":"227","severity":1,"message":"248","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":29},{"ruleId":"227","severity":1,"message":"249","line":8,"column":31,"nodeType":"229","messageId":"230","endLine":8,"endColumn":45},{"ruleId":"227","severity":1,"message":"250","line":8,"column":47,"nodeType":"229","messageId":"230","endLine":8,"endColumn":56},{"ruleId":"227","severity":1,"message":"251","line":9,"column":10,"nodeType":"229","messageId":"230","endLine":9,"endColumn":20},{"ruleId":"227","severity":1,"message":"252","line":49,"column":7,"nodeType":"229","messageId":"230","endLine":49,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":53,"column":11,"nodeType":"255","messageId":"256","endLine":53,"endColumn":18},{"ruleId":"227","severity":1,"message":"257","line":121,"column":15,"nodeType":"229","messageId":"230","endLine":121,"endColumn":20},{"ruleId":"227","severity":1,"message":"258","line":122,"column":15,"nodeType":"229","messageId":"230","endLine":122,"endColumn":26},{"ruleId":"227","severity":1,"message":"259","line":126,"column":15,"nodeType":"229","messageId":"230","endLine":126,"endColumn":28},{"ruleId":"227","severity":1,"message":"260","line":127,"column":15,"nodeType":"229","messageId":"230","endLine":127,"endColumn":24},{"ruleId":"227","severity":1,"message":"261","line":129,"column":15,"nodeType":"229","messageId":"230","endLine":129,"endColumn":25},{"ruleId":"227","severity":1,"message":"262","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":19},{"ruleId":"227","severity":1,"message":"231","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":17},{"ruleId":"227","severity":1,"message":"263","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":13},{"ruleId":"227","severity":1,"message":"264","line":8,"column":15,"nodeType":"229","messageId":"230","endLine":8,"endColumn":19},{"ruleId":"227","severity":1,"message":"265","line":8,"column":21,"nodeType":"229","messageId":"230","endLine":8,"endColumn":28},{"ruleId":"227","severity":1,"message":"266","line":8,"column":30,"nodeType":"229","messageId":"230","endLine":8,"endColumn":38},{"ruleId":"227","severity":1,"message":"267","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":15},{"ruleId":"239","severity":1,"message":"268","line":111,"column":8,"nodeType":"241","endLine":111,"endColumn":16,"suggestions":"269"},{"ruleId":"227","severity":1,"message":"270","line":4,"column":13,"nodeType":"229","messageId":"230","endLine":4,"endColumn":20},{"ruleId":"227","severity":1,"message":"271","line":16,"column":15,"nodeType":"229","messageId":"230","endLine":16,"endColumn":18},{"ruleId":"227","severity":1,"message":"272","line":21,"column":15,"nodeType":"229","messageId":"230","endLine":21,"endColumn":26},{"ruleId":"227","severity":1,"message":"273","line":49,"column":18,"nodeType":"229","messageId":"230","endLine":49,"endColumn":29},{"ruleId":"223","replacedBy":"274"},{"ruleId":"225","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":47,"column":25,"nodeType":"278","endLine":47,"endColumn":109},{"ruleId":"276","severity":1,"message":"277","line":49,"column":25,"nodeType":"278","endLine":49,"endColumn":108},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"@typescript-eslint/no-unused-vars","'ChatBar' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'queryString' is defined but never used.","'hark' is defined but never used.","'pin' is assigned a value but never used.","'peers2' is assigned a value but never used.","'setPeers2' is assigned a value but never used.","'systemMessage' is assigned a value but never used.","'setSystemMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'room'. Either include them or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["281"],"React Hook useEffect has a missing dependency: 'setMessages'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["283"],"'aspectRatio' is assigned a value but never used.","'FullScreenContainer' is defined but never used.","'VideoContainer' is defined but never used.","'VideoMenu' is defined but never used.","'FullScreen' is defined but never used.","'SelfVideo' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'video' is assigned a value but never used.","'getVideoPin' is assigned a value but never used.","'roomContainer' is assigned a value but never used.","'videoMenu' is assigned a value but never used.","'videoUnpin' is assigned a value but never used.","'ResizePanel' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'Prepare' is defined but never used.","React Hook useEffect has missing dependencies: 'peers' and 'userVideo'. Either include them or remove the dependency array.",["284"],"'bodyPix' is defined but never used.","'ctx' is assigned a value but never used.","'constraints' is assigned a value but never used.","'handleError' is defined but never used.",["279"],["280"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: [name, room]",{"range":"293","text":"294"},"Update the dependencies array to be: [setMessages]",{"range":"295","text":"296"},"Update the dependencies array to be: [setUsers]",{"range":"297","text":"298"},"Update the dependencies array to be: [peers, stream, userVideo]",{"range":"299","text":"300"},[4052,4062],"[name, room]",[4324,4326],"[setMessages]",[674,676],"[setUsers]",[5193,5201],"[peers, stream, userVideo]"]